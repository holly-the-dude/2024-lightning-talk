################################################################
# This role will create a task for someone whom you either like or not
# read the readme.md
################################################################

################################################

- name: Search for group
  ansible.builtin.uri:
    url: "https://{{ snow_instance }}.service-now.com/api/now/table/sys_user_group?name={{ task_assignment_group|urlencode }}"
    method: GET
    user: "{{ Uname }}"
    password: "{{ Upass }}"
    headers:
      Accept: application/json
      Content-Type: application/json
    body_format: json
    status_code:
      - 200
      - 201
  register: snow_group_results
  when: task_assignment_group is defined


- name: show sys id
  ansible.builtin.debug:
    msg:
      - "{{ snow_group_results.json.result[0].sys_id }}"
    verbosity: 1

- name: Search for cmdb_ci
  ansible.builtin.uri:
    url: "https://{{ snow_instance }}.service-now.com/api/now/table/cmdb_ci_business_app?name={{ task_cmdb_ci|urlencode }}"
    method: GET
    user: "{{ Uname }}"
    password: "{{ Upass }}"
    headers:
      Accept: application/json
      Content-Type: application/json
    body_format: json
    status_code:
      - 200
      - 201
  register: snow_cmdb_ci_results
  when: task_assignment_group is defined

- name: Search for cmdb_ci
  servicenow.servicenow.snow_record_find:
    instance: "{{ snow_instance }}"
    username: "{{ Uname }}"
    password: "{{ Upass }}"
    table: cmdb_ci #_business_app
    query:
      name: "{{ task_cmdb_ci }}"
  register: snow_cmdb_ci_results2

- name: show Info
  ansible.builtin.debug:
    msg:
      - "{{ snow_cmdb_ci_results }}"
    verbosity: 1

- name: fail block
  when: '(snow_group_results.json.result | length) == 0  or (snow_cmdb_ci_results.json.result | length) == 0'
  block:
    - name: fail check without user
      debug:
        msg:
          - "-------------------------------------"
          - "| check your vars for a misspelling |"
          - "| any var with size of 0 is no good |"
          - "-------------------------------------"
          - "| task_assignment_group {{ snow_group_results.json.result |length}}           "
          - "| task_cmdb_ci          {{ snow_cmdb_ci_results.json.result | length }}       "
          - "-------------------------------------"
    - meta: end_play


- name: show group and ci
  ansible.builtin.debug:
    msg:
      - 'assignedgroup: "{{ snow_group_results.json.result[0].sys_id }}"'
      - 'cmdbci: "{{ snow_cmdb_ci_results.json.result[0].sys_id }}"'
    verbosity: 1

- name: set key facts based searches
  set_fact:
    cmdbci: "{{ snow_cmdb_ci_results.json.result[0].sys_id }}"
    assignedgroup: "{{ snow_group_results.json.result[0].sys_id }}"

- name: show values
  ansible.builtin.debug:
    msg:
      - "assignedgroup {{ assignedgroup }}"
      - "cmdbci {{ cmdbci }}"
    verbosity: 1

- name: Create Task
  ansible.builtin.uri:
    url: "https://{{ snow_instance }}.service-now.com/api/now/table/sc_task"
    method: POST
    body_format: json
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
    body:
      active: "true"
      u_ci_class: "{{ task_ci_class }}"
      assignment_group: "{{ assignedgroup }}"
      cmdb_ci: "{{ cmdbci }}"
      description: "{{ task_description }}"
      short_description: "{{ task_short_name }}"
      priority: "{{ task_priority }}"
      Approval: "approved"
    url_password: "{{ Upass }}"
    url_username: "{{ Uname }}"
    status_code: 201
    validate_certs: false
  register: create_task

- name: show create task results
  ansible.builtin.debug:
    msg:
      - "{{ create_task }}"
    verbosity: 1


- name: results
  debug:
    msg:
      - "-----------------------------"
      - " task {{ create_task.json.result.task_effective_number }} created "
      - "-----------------------------"
      - " detailed json results can be "
      - " found in create_task.json "
      - "-----------------------------"

